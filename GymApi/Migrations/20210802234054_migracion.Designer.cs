// <auto-generated />
using System;
using GymApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GymApi.Migrations
{
    [DbContext(typeof(dbContext))]
    [Migration("20210802234054_migracion")]
    partial class migracion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GymApi.Models.FotosRutinas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RutinaIdRutina")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RutinaIdRutina");

                    b.ToTable("FotosRutinas");
                });

            modelBuilder.Entity("GymApi.Models.Mensajes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Mensaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Mensajes");
                });

            modelBuilder.Entity("GymApi.Models.MensajesUsuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdMensaje")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("MensajeId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MensajeId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("MensajesUsuarios");
                });

            modelBuilder.Entity("GymApi.Models.Roles", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("usuariosId")
                        .HasColumnType("int");

                    b.HasKey("IdRol");

                    b.HasIndex("usuariosId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("GymApi.Models.Rutinas", b =>
                {
                    b.Property<int>("IdRutina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreRutina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRutina");

                    b.ToTable("Rutinas");
                });

            modelBuilder.Entity("GymApi.Models.RutinasUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Agregado")
                        .HasColumnType("bit");

                    b.Property<int>("IdRutina")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("RutinaIdRutina")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RutinaIdRutina");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RutinasUsuario");
                });

            modelBuilder.Entity("GymApi.Models.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("RutinasUsuarios", b =>
                {
                    b.Property<int>("RutinasIdRutina")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosId")
                        .HasColumnType("int");

                    b.HasKey("RutinasIdRutina", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("RutinasUsuarios");
                });

            modelBuilder.Entity("GymApi.Models.FotosRutinas", b =>
                {
                    b.HasOne("GymApi.Models.Rutinas", "Rutina")
                        .WithMany("FotosRutinas")
                        .HasForeignKey("RutinaIdRutina");

                    b.Navigation("Rutina");
                });

            modelBuilder.Entity("GymApi.Models.MensajesUsuarios", b =>
                {
                    b.HasOne("GymApi.Models.Mensajes", "Mensaje")
                        .WithMany("Usuario")
                        .HasForeignKey("MensajeId");

                    b.HasOne("GymApi.Models.Usuarios", "Usuario")
                        .WithMany("Mensajes")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Mensaje");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GymApi.Models.Roles", b =>
                {
                    b.HasOne("GymApi.Models.Usuarios", "usuarios")
                        .WithMany("Roles")
                        .HasForeignKey("usuariosId");

                    b.Navigation("usuarios");
                });

            modelBuilder.Entity("GymApi.Models.RutinasUsuario", b =>
                {
                    b.HasOne("GymApi.Models.Rutinas", "Rutina")
                        .WithMany()
                        .HasForeignKey("RutinaIdRutina");

                    b.HasOne("GymApi.Models.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Rutina");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RutinasUsuarios", b =>
                {
                    b.HasOne("GymApi.Models.Rutinas", null)
                        .WithMany()
                        .HasForeignKey("RutinasIdRutina")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymApi.Models.Usuarios", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GymApi.Models.Mensajes", b =>
                {
                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GymApi.Models.Rutinas", b =>
                {
                    b.Navigation("FotosRutinas");
                });

            modelBuilder.Entity("GymApi.Models.Usuarios", b =>
                {
                    b.Navigation("Mensajes");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
